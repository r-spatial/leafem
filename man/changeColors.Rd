% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/changeColors.R
\name{changeColors}
\alias{changeColors}
\title{Change the color palette of a map layer}
\usage{
changeColors(map, className, colors, selector = NULL, legend = FALSE)
}
\arguments{
\item{map}{a mapview or leaflet object.}

\item{className}{character vector; one or more class names to apply the
color-change to. The layer(s) must have had this class name assigned to it;
see examples. Note that this will be applied to all HTML elements with this
class, so the more unique the name, the better. `className` should be
missing if `selector` is provided.}

\item{colors}{character vector; the colors that form the new color palette.
Colors can be either named colors in R (like "red" or "blue") or
hexadecimal colors}

\item{selector}{character vector; one or more CSS selectors - any element
that matches this selector will have its color changed}

\item{legend}{boolean; if `TRUE`, the color change will be applied to a
legend created using `leaflet::addLegend()`. The legend must have the
specified class name, which be done with the `className` parameter of
`addLegend()`. Note that the class name of the legend needs to be different
than the class name of the map layer - otherwise the color change will be
applied to the entire legend rather than just the color bar. See examples.}
}
\description{
Given a class name that corresponds to a map layer or layers,
  uses the 'gradientmap' JavaScript library to change the color scheme on the
  fly
}
\examples{
if (interactive()) {
  library(leaflet)

  # example using 'addWMSTiles()'
  leaflet() |>
    addTiles() |>
    fitBounds(-126, 29, -99, 49) |>
    addWMSTiles(
      paste0(
        "https://www.mrlc.gov/geoserver/mrlc_display/",
        "NLCD_2016_Bare_Ground_Shrubland_Fractional_Component/",
        "ows?SERVICE=WMS&"
      ),
      layers = "NLCD_2016_Bare_Ground_Shrubland_Fractional_Component",
      options = WMSTileOptions(className = "bare_ground",
                               transparent = TRUE,
                               format = "image/png")) |>
    changeColors("bare_ground", terrain.colors(20))

  # example using 'addTiles()'
  leaflet() |>
    addTiles(options = tileOptions(className = "base")) |>
    changeColors("base", colorRampPalette(c("red", "white"))(50))

  # example using 'addRasterImage()' and 'addLegend()'
  r <- raster::raster(xmn = -2.8, xmx = -2.79, ymn = 54.04, ymx = 54.05,
  nrows = 30, ncols = 30, crs = "EPSG:4326", vals = 1:900)
  old_pal <- colorNumeric(topo.colors(50), c(0, 1000))
  new_pal <- heat.colors(50)
  leaflet() |>
    addTiles() |>
    addRasterImage(r, colors = old_pal, opacity = 0.8,
                   options = tileOptions(className = "base")) |>
    addLegend(pal = old_pal, values = c(0, 1000),
              className = "info legend base-legend") |>
    changeColors("base", new_pal) |>
    changeColors("base-legend", new_pal, legend = TRUE)
}
}
